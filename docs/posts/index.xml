<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Parakeety&#39;s Blog</title>
    <link>https://parakeety.github.io/hugo-blog/posts/</link>
    <description>Recent content in Posts on Parakeety&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Sep 2017 21:46:06 +0900</lastBuildDate>
    
	<atom:link href="https://parakeety.github.io/hugo-blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo</title>
      <link>https://parakeety.github.io/hugo-blog/posts/hugo/</link>
      <pubDate>Mon, 18 Sep 2017 21:46:06 +0900</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/hugo/</guid>
      <description>&lt;p&gt;ブログを&lt;a href=&#34;https://hexo.io/&#34;&gt;hexo&lt;/a&gt;から&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;に移行しました。特にGolangを勉強したいからHugoを選んだわけではなく、テーマが好みなのが多かったからです。&lt;/p&gt;

&lt;p&gt;移行で少し面倒だったのが、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;baseURL&lt;/code&gt;の設定&lt;/li&gt;
&lt;li&gt;Hugoのsummariesが日本語だと自動で動かないので、&lt;code&gt;&lt;/code&gt;を入れてあげる必要がある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の2点です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>毎朝カフェで勉強</title>
      <link>https://parakeety.github.io/hugo-blog/posts/morning-cafe/</link>
      <pubDate>Wed, 13 Sep 2017 21:56:44 +0000</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/morning-cafe/</guid>
      <description>&lt;p&gt;最近出社前に1時間ほど近場のカフェで勉強しています。iOSだと学習曲線がかなり緩やかになっているのですが、学習曲線がまだまだ険しい分野を勉強しており、毎朝カフェで勉強するのが楽しみです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>メルカリ/ソウゾウに入社しました</title>
      <link>https://parakeety.github.io/hugo-blog/posts/mercari/</link>
      <pubDate>Sun, 01 Jan 2017 16:02:07 +0000</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/mercari/</guid>
      <description>&lt;p&gt;2年弱いたLINEを退社し、この度メルカリに入社しました。ソウゾウという新規事業をやる部門所属です。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>カウントダウンアプリを更新</title>
      <link>https://parakeety.github.io/hugo-blog/posts/update-countdown/</link>
      <pubDate>Mon, 15 Feb 2016 13:54:44 +0000</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/update-countdown/</guid>
      <description>&lt;p&gt;2012年に作ってそのままにしていた&lt;a href=&#34;https://itunes.apple.com/us/app/badge-countdown/id507014333?mt=8&#34;&gt;Badge Countdown&lt;/a&gt;という、バッジで残り日数をカウントダウンできるアプリを更新しました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GoogleFontsiOS</title>
      <link>https://parakeety.github.io/hugo-blog/posts/googlefontsios/</link>
      <pubDate>Fri, 07 Aug 2015 22:06:58 +0000</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/googlefontsios/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/parakeety/GoogleFontsiOS&#34;&gt;GoogleFontsiOS&lt;/a&gt;というライブラリを公開しました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hexo memo</title>
      <link>https://parakeety.github.io/hugo-blog/posts/hexo-memo/</link>
      <pubDate>Fri, 07 Aug 2015 22:01:39 +0000</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/hexo-memo/</guid>
      <description>新しい記事の作成 hexo new draft &amp;lt;title&amp;gt;  ローカル環境で確認 hexo server --draft --open  port 4000で見れるようになる
記事の公開 hexo publish &amp;lt;title&amp;gt;  生成 hexo generate  deploy hexo deploy  hexo generate --deploy  で生成とdeployをまとめてできる
cf https://www.cgmartin.com/2016/01/03/getting-started-with-hexo-blog/</description>
    </item>
    
    <item>
      <title>再起動</title>
      <link>https://parakeety.github.io/hugo-blog/posts/restart/</link>
      <pubDate>Tue, 16 Jun 2015 14:17:31 +0900</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/restart/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.webpay.co.jp/post/line-to-acquire-webpay_10feb2015&#34;&gt;会社の買収&lt;/a&gt;などもあり、中々ブログを更新できておりませんでした。&lt;/p&gt;

&lt;p&gt;新生活も落ち着いてきたので、また以前の様に更新していきたいです。
Octopressに対して細々とした不満があり、違う静的サイトジェネレーターへの移行を目論んでいます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NSErrorとNSException</title>
      <link>https://parakeety.github.io/hugo-blog/posts/nserror-and-nsexception/</link>
      <pubDate>Tue, 30 Dec 2014 17:23:39 -0800</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/nserror-and-nsexception/</guid>
      <description>&lt;p&gt;Cocoaには、エラーが起きた時の対処方法として、&lt;code&gt;NSError&lt;/code&gt;と&lt;code&gt;NSException&lt;/code&gt;があります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Core Dataで書かれたコードをMagicalRecordで置き換えた</title>
      <link>https://parakeety.github.io/hugo-blog/posts/magicalrecord/</link>
      <pubDate>Wed, 17 Dec 2014 01:29:52 -0800</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/magicalrecord/</guid>
      <description>&lt;p&gt;昔作ったアプリを今修正しているのですが、Core Data周りのコードが書くのが辛かったので、&lt;a href=&#34;https://github.com/magicalpanda/MagicalRecord&#34;&gt;MagicalRecord&lt;/a&gt;に移行しました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>middlemanで作ったportfolioをS3で運用</title>
      <link>https://parakeety.github.io/hugo-blog/posts/portfolio/</link>
      <pubDate>Sat, 22 Nov 2014 01:22:05 -0800</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/portfolio/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.parakeety.com/&#34;&gt;portfolio&lt;/a&gt;を作成しました。本当は他にも作ったものがあるのですが、デザイン等色々修正する必要があるので、追々追加して行こうと考えています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NSDateFormatterの再利用</title>
      <link>https://parakeety.github.io/hugo-blog/posts/reuse-nsdateformatter/</link>
      <pubDate>Mon, 27 Oct 2014 11:40:17 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/reuse-nsdateformatter/</guid>
      <description>&lt;p&gt;&lt;code&gt;NSDateFormatter&lt;/code&gt;を含む&lt;code&gt;NSFormatter&lt;/code&gt;クラスは、生成コストが高いのでなるべく再利用します。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>agがとても便利</title>
      <link>https://parakeety.github.io/hugo-blog/posts/ag/</link>
      <pubDate>Sat, 18 Oct 2014 16:02:07 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/ag/</guid>
      <description>&lt;p&gt;&lt;code&gt;ack&lt;/code&gt;より、&amp;rsquo;better&amp;rsquo;と主張している&lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;ag(silver search)&lt;/a&gt;を入れました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XCTestExpectation</title>
      <link>https://parakeety.github.io/hugo-blog/posts/xctestexpectation/</link>
      <pubDate>Mon, 06 Oct 2014 23:16:00 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/xctestexpectation/</guid>
      <description>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;XCTestExpectation&lt;/code&gt;とは、xcode6にて追加された非同期テスト用のAPIです。
これまで、非同期な処理のテストをするのにGCDのAPIを使ったり、&lt;a href=&#34;https://github.com/travisjeffery/TRVSMonitor&#34;&gt;TRVSMonitor&lt;/a&gt;等のライブラリを使う必要がありましたが、今後は&lt;code&gt;XCTestExpectation&lt;/code&gt;を使うことができます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>コード書かないとその言語のシンタックスを忘れる</title>
      <link>https://parakeety.github.io/hugo-blog/posts/forget-programming-syntax/</link>
      <pubDate>Sat, 27 Sep 2014 16:06:37 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/forget-programming-syntax/</guid>
      <description>&lt;p&gt;例え何年も書いているプログラミング言語でも、しばらく書いていないと、どうしても忘れしまうのが悩みの種でした。
(&lt;a href=&#34;http://programmers.stackexchange.com/questions/67750/can-one-forget-programming-if-it-is-not-practiced-for-some-time&#34;&gt;どうやら自分だけではなかったようです。&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cocoapods-trunk</title>
      <link>https://parakeety.github.io/hugo-blog/posts/cocoapods-trunk/</link>
      <pubDate>Thu, 18 Sep 2014 13:22:51 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/cocoapods-trunk/</guid>
      <description>&lt;p&gt;以前&lt;a href=&#34;http://parakeety.github.io/blog/2014/04/27/registration-process-to-cocoapods-spec/&#34;&gt;cocoapods specへの登録方法&lt;/a&gt;を紹介しましたが、&lt;a href=&#34;http://blog.cocoapods.org/CocoaPods-Trunk/&#34;&gt;Cocoapods trunk&lt;/a&gt;の登場によって、やり方が変わったので、新しい方法を紹介します。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>synthesizeはいつ書く必要があるか</title>
      <link>https://parakeety.github.io/hugo-blog/posts/synthesize/</link>
      <pubDate>Sat, 30 Aug 2014 17:24:49 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/synthesize/</guid>
      <description>&lt;p&gt;compilerの進化に合わせて、objective-cにおける&lt;code&gt;property&lt;/code&gt;の書き方も変化してきましたが、今回は&lt;code&gt;synthesize&lt;/code&gt;について。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>以前作ったcoffeelintのcustom ruleがcoffeelint本体に採用された</title>
      <link>https://parakeety.github.io/hugo-blog/posts/prefer-english-operator-merged-to-coffeelint/</link>
      <pubDate>Sat, 23 Aug 2014 10:55:47 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/prefer-english-operator-merged-to-coffeelint/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/parakeety/coffeelint-prefer-english-operator&#34;&gt;coffeelint-prefer-english-operator&lt;/a&gt;というcoffeelintのcustom ruleを&lt;a href=&#34;http://parakeety.github.io/blog/2014/05/31/coffeelint-prefer-english-operator/&#34;&gt;以前作った&lt;/a&gt;のですが、&lt;a href=&#34;https://github.com/clutchski/coffeelint/commit/d028c4e6e4c652d7816e54b1d41849de53481368&#34;&gt;coffeelint本体に採用&lt;/a&gt;されました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>開発ツール</title>
      <link>https://parakeety.github.io/hugo-blog/posts/dev-tools/</link>
      <pubDate>Sat, 05 Jul 2014 02:42:35 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/dev-tools/</guid>
      <description>&lt;p&gt;仕事で色々inputはしているのだが、それをきれいにまとめる、足りない分を調査する時間が中々取れていない。jsでの依存関係解決の話、moduleの話(commonjs, AMD, UMD)、&lt;a href=&#34;https://github.com/substack/node-browserify&#34;&gt;browserify&lt;/a&gt;とネタは溜まっているので、追々記事にしていきたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>文字からUnicode numberを識別する</title>
      <link>https://parakeety.github.io/hugo-blog/posts/detect-unicode-number/</link>
      <pubDate>Mon, 30 Jun 2014 00:26:10 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/detect-unicode-number/</guid>
      <description>日本語だと横棒がハイフンなのか、ダッシュなのか、全角マイナスなのかの識別が目視ではしづらいです。そこで、以下のpythonスクリプトを実行すれば、Unicode numberを返してくれます。
# detect ―(0x2015) print hex(ord(u&#39;―&#39;))  </description>
    </item>
    
    <item>
      <title>nend SDKをCocoaPodsのPrivate Podsとして管理する</title>
      <link>https://parakeety.github.io/hugo-blog/posts/nend-cocoapods-private-pod/</link>
      <pubDate>Sun, 22 Jun 2014 00:57:48 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/nend-cocoapods-private-pod/</guid>
      <description>&lt;p&gt;iphoneアプリに表示する広告として、&lt;a href=&#34;http://nend.net/&#34;&gt;nend&lt;/a&gt;を使っているのですが、いかんせんCocoaPodsに対応していないため、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;新しいバージョンが出た時&lt;/li&gt;
&lt;li&gt;新しいプロジェクトに追加する時&lt;/li&gt;
&lt;li&gt;新しいマシンにした時&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;に毎回手動でライブラリをダウンロードやら、追加しないといけません。「3回繰り返したら自動化」に倣い、自動化する事にしました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>モバイル向けのウェブサイトを作る上でのTips</title>
      <link>https://parakeety.github.io/hugo-blog/posts/mobile-web-design/</link>
      <pubDate>Sun, 15 Jun 2014 01:11:03 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/mobile-web-design/</guid>
      <description>&lt;h2 id=&#34;meta-tagを追加する&#34;&gt;meta tagを追加する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;内に以下のタグを追加する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;width=device-width&lt;/code&gt;は&lt;code&gt;viewport&lt;/code&gt;の幅をデバイスの幅に合わせてくれます&lt;/li&gt;
&lt;li&gt;&lt;code&gt;initial-scale=1&lt;/code&gt;はページのロード時のズームを一倍に設定します。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user-scalable=no&lt;/code&gt;で、ズームができなくするようにもできます。が、モバイル端末の向きを変えたりして、ズームが変わった時に、ユーザーが元のズームに戻す方法がなくなるので、個人的には設定しない方が良いかなと感じています。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coffeelintのcustom ruleを作った</title>
      <link>https://parakeety.github.io/hugo-blog/posts/coffeelint-prefer-english-operator/</link>
      <pubDate>Sat, 31 May 2014 22:28:05 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/coffeelint-prefer-english-operator/</guid>
      <description>&lt;p&gt;tl;dr: &lt;code&gt;==&lt;/code&gt;、&lt;code&gt;!=&lt;/code&gt;、&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;、&lt;code&gt;||&lt;/code&gt;を使っている時に、warningを出す&lt;code&gt;coffeelint&lt;/code&gt;の&lt;a href=&#34;http://www.coffeelint.org/&#34;&gt;custom rule&lt;/a&gt;を作ったよ&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>アプリやiosライブラリを作って感じたこと</title>
      <link>https://parakeety.github.io/hugo-blog/posts/ios-learned-lessons/</link>
      <pubDate>Sun, 25 May 2014 02:32:41 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/ios-learned-lessons/</guid>
      <description>&lt;h2 id=&#34;viewは最初の設計でうまくいかない事が多い&#34;&gt;Viewは最初の設計でうまくいかない事が多い&lt;/h2&gt;

&lt;p&gt;iOSにおけるViewは様々な制約(subclassしてはいけない、subclassしないといけない)があり、最初にしっかり設計しても、ハウルの動く城の様につぎはぎになってしまう事が多いです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>objective-cにおけるprotectedなpropertyの定義方法</title>
      <link>https://parakeety.github.io/hugo-blog/posts/protected-property/</link>
      <pubDate>Sun, 18 May 2014 21:39:37 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/protected-property/</guid>
      <description>&lt;p&gt;privateな&lt;code&gt;property&lt;/code&gt;は&lt;code&gt;class extension&lt;/code&gt;を使えば良いですが、&lt;code&gt;protected&lt;/code&gt;、即ち&lt;code&gt;subclass&lt;/code&gt;からもアクセスできる&lt;code&gt;property&lt;/code&gt;が欲しい場合どうするか。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>private property vs privateなインスタンス変数</title>
      <link>https://parakeety.github.io/hugo-blog/posts/private-property-vs-private-ivar/</link>
      <pubDate>Sun, 11 May 2014 03:46:29 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/private-property-vs-private-ivar/</guid>
      <description>&lt;p&gt;外部から隠蔽したい状態を保持するには、privateな&lt;code&gt;property&lt;/code&gt;とprivateなインスタンス変数と2通りのやり方があります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>propertyの属性</title>
      <link>https://parakeety.github.io/hugo-blog/posts/property-attributes-in-objective-c/</link>
      <pubDate>Sun, 04 May 2014 02:47:35 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/property-attributes-in-objective-c/</guid>
      <description>&lt;p&gt;propertyを宣言する場合に、どの属性を指定すべきかまとめたものです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>objective-cでNSStringをbase64 encode</title>
      <link>https://parakeety.github.io/hugo-blog/posts/base64-encoding/</link>
      <pubDate>Tue, 01 Apr 2014 23:49:45 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/base64-encoding/</guid>
      <description>&lt;p&gt;ios7から、&lt;code&gt;NSData&lt;/code&gt;に&lt;code&gt;base64EncodedStringWithOptions:&lt;/code&gt;というメソッドが新たに追加され、base64 encodingが楽になりました。しかも、ios7より以前のバージョン用に、それまでprivateだった&lt;code&gt;base64Encoding&lt;/code&gt;というメソッドがpublicになりました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>switch</title>
      <link>https://parakeety.github.io/hugo-blog/posts/switch/</link>
      <pubDate>Mon, 31 Mar 2014 22:21:28 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/switch/</guid>
      <description>&lt;h3 id=&#34;objective-cのswitchは整数値しか判定できない&#34;&gt;objective-cのswitchは整数値しか判定できない&lt;/h3&gt;

&lt;p&gt;objective-cにおける&lt;code&gt;switch&lt;/code&gt;の条件式は、integral(整数値. intなど)しか受け付けません。なので、以下の様に&lt;code&gt;NSString&lt;/code&gt;のインスタンスを条件式に渡すと、構文エラーになります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XCTestで書いたUnit Testのリファクタリングを試みた</title>
      <link>https://parakeety.github.io/hugo-blog/posts/xctest-refactoring/</link>
      <pubDate>Fri, 28 Mar 2014 16:19:32 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/xctest-refactoring/</guid>
      <description>&lt;p&gt;XCTestで書いたUnit testのrefactoringを試みたのですが、個人的にすっきりする方法が見つかりませんでした。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Octopress始めました。</title>
      <link>https://parakeety.github.io/hugo-blog/posts/first-post/</link>
      <pubDate>Thu, 27 Mar 2014 23:07:15 -0700</pubDate>
      
      <guid>https://parakeety.github.io/hugo-blog/posts/first-post/</guid>
      <description>&lt;p&gt;他のブログサービスなども検討しましたが、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;無料&lt;/li&gt;
&lt;li&gt;markdownが使える&lt;/li&gt;
&lt;li&gt;好きなエディタで文章を書く事ができる&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以上の3点が自分にとっては大きく、octopressにしました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>